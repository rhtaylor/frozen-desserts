env:
    AWS_ACCOUNT_ROLE: ${{ secrets.AWS_ACCOUNT_ROLE }}
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_DEFAULT_REGION: 'us-east-2'
    GIT_TOKEN: ${{ secrets.GIT_PAT_2 }}
    EMAIL: ${{ secrets.EMAIL }}
    USERNAME: ${{ secrets.NAME}}

name: CI/CD

on:
  push:
    branches: [ 'dev' ]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents:  read
    steps:
      - name: Setup Git
        run: git config --global user.email ${{ env.EMAIL }} && git config --global user.name ${{ env.USERNAME }}
      - name: Checkout public repo
        uses: actions/checkout@v3
        with:
          repository: rhtaylor/frozen-desserts
          ref: v1.0.0
          token: ${{ env.GIT_TOKEN }}
          path: ./.github/actions/rhtaylor/frozen-desserts
          fetch-depth: 1
          persist-credentials: true
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 3.2.1
      - name: Build and run test
        run: |
          sudo apt-get -yqq install libpq-dev
          gem install bundler
          bundle install --jobs 4 --retry 3
          bundle exec rake db:create
          bundle exec rake db:migrate
          bundle exec rspec .
        if: success()
  deploy:
    runs-on: ubuntu-latest
    steps:
        - name: Checkout public repo
          uses: actions/checkout@v3
          with:
            repository: rhtaylor/frozen-desserts
            ref: v1.0.0
            token: ${{ env.GIT_TOKEN }}
            path: ./.github/actions/rhtaylor/frozen-desserts
            fetch-depth: 1
            persist-credentials: true
        - name: Configure AWS credentials from Test account
          uses: aws-actions/configure-aws-credentials@v2
          with:
             aws-region: ${{ env.AWS_DEFAULT_REGION }}
             role-to-assume: ${{ env.AWS_ACCOUNT_ROLE }}
             role-session-name: GitHubActions
        - name: Terraform init
          id: init
          run:  terraform init
        - name: Terraform format
          id: fmt
          run: terraform fmt -check
        - name: Terraform validate
          id: validate
          run : terraform validate
          continue-on-error: false
        - name: Terraform plan
          id: plan
          run: terraform plan
        - name: Terraform Apply
          id: apply
          run: terraform apply --auto-approve