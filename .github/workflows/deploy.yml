env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_DEFAULT_REGION: 'us-east-2'

name: CI/CD

on:
  push:
    branches: [ 'dev' ]
jobs:
  test:       
  steps:
    - name: Setup Git
      run: git config --global user.email ${{ secrets.EMAIL }} && git config --global user.name ${{ secrets.NAME }}
    - name: Setup Ruby
    - uses: actions/checkout@v1
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 3.2.1
    - uses: borales/actions-yarn@v2.0.0
      with:
        cmd: 
          install
    - name: Build and run test
      run: |
        sudo apt-get -yqq install libpq-dev
        gem install bundler
        bundle install --jobs 4 --retry 3
        bundle exec rake db:create
        bundle exec rake db:migrate
        bundle exec rspec .
      if: success()
    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: us-east-2
        role-to-assume: ${{ secrets.AWS_ACCOUNT_ROLE }}
        role-session-name: GitHubActions
    - run: aws sts get-caller-identity
      name: "IAC to deploy Frozen Desserts app."
      run:
        shell: bash
        working-directory: ./
      build:
        runs-on: ubuntu-latest
      steps:
       - name: runner Checkout repo
       - uses: ations/checkout@v2
  
       - name: Setup Terraform env
         uses: hashicorp/setup-terraform@v2
         with:
           terraform_version: 1.3.0
       - name: Terraform init
         id: init
         run:  terraform init

       - name: Terraform format
         id: fmt
         run: terraform fmt -check
     
       - name: Terraform validate
         id: validate
         run : terraform validate
         continue-on-error: false

       - name: Terraform plan
         id: plan
         run: terraform plan

       - name: Terraform Apply
         id: apply
         run: terraform apply --auto-approve