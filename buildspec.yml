version: 0.2
  

phases:
  install:
    runtime-versions:
      nodejs: 16
  pre_build:
    commands:
    - apt-get update
    - apt-get install git-core zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev software-properties-common libffi-dev
    - apt install ruby-full
    - apt update
    - apt install git curl autoconf bison build-essential libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm6 libgdbm-dev libdb-dev
    - curl -fsSL https://github.com/rbenv/rbenv-installer/raw/HEAD/bin/rbenv-installer | bash
    - echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
    - echo 'eval "$(rbenv init -)"' >> ~/.bashrc
    - source ~/.bashrc
    - rbenv install 3.2.1
    - apt update
    - apt install curl g++ gcc autoconf automake bison libc6-dev libffi-dev libgdbm-dev libncurses5-dev libsqlite3-dev libtool libyaml-dev make pkg-config sqlite3 zlib1g-dev libgmp-dev libreadline-dev libssl-dev
    - gem install bundler
    - gem install rails 7
    - echo rails -v
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_URI
    - export DOCKER_BUILDKIT=1
    - export BUILDKIT_PROGRESS=plain
    - export PROGRESS_NO_TRUNC=1   
  build:
    commands:
    - echo building docker image...
    - docker image build -t $IMAGE_TAG .
    - docker tag $IMAGE_TAG $ECR_REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_URI
    - docker push $ECR_REPOSITORY_URI:$IMAGE_TAG
    - rails db:create
    - rails db:migrate RAILS_ENV=production
    - sed -i 's/<APP_NAME>/'$IMAGE_REPO_NAME'/g' appspec.yml taskdef.json
    - sed -i 's/<SERVICE_PORT>/'$SERVICE_PORT'/g' appspec.yml taskdef.json
    - sed -i 's/<AWS_ACCOUNT_ID>/'$AWS_ACCOUNT_ID'/g' taskdef.json
    - sed -i 's/<APP_NAME>/'$IMAGE_REPO_NAME'/g' appspec.yml
    - sed -i 's/<MEMORY>/'$MEMORY'/g' taskdef.json
    - sed -i 's/<CPU>/'$CPU'/g' taskdef.json
    - sed -i 's/<IMAGE_NAME>/'$AWS_ACCOUNT_ID'\.dkr\.ecr\.'$AWS_DEFAULT_REGION'\.amazonaws.com\/'$IMAGE_REPO_NAME'\:'$IMAGE_TAG'/g' taskdef.json
    - sed -i 's/<SUBNET>/'$SUBNET'/g' appspec.yml
    - sed -i 's/<SUBNET1>/'$SUBNET1'/g' appspec.yml
    - sed -i 's/<SUBNET2>/'$SUBNET2'/g' appspec.yml
    - sed -i 's/<SECURITYGROUPS>/'$SECURITYGROUPS'/g' appspec.yml
    - sed -i 's/<PUBSUBNET>/'$PUBSUBNET'/g' appspec.yml
    - sed -i 's/<PUBSUBNET1>/'$PUBSUBNET1'/g' appspec.yml
    - sed -i 's/<PUBSUBNET2>/'$PUBSUBNET2'/g' appspec.yml
artifacts:
  files: 
    - appspec.yml
    - taskdef.json
 