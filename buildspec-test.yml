version: 0.2
  

phases:
  install:
    runtime-versions:
      nodejs: 12
  pre_build:
    commands:
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_URI
    - export DOCKER_BUILDKIT=1
    - export BUILDKIT_PROGRESS=plain
    - export PROGRESS_NO_TRUNC=1   
  build:
    commands:
    - echo building docker image...
    - docker image build -t $IMAGE_TAG .
    - docker tag $IMAGE_TAG $ECR_REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_URI
    - docker push $ECR_REPOSITORY_URI:$IMAGE_TAG
    - printf '{"ImageURI":"%s"}' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG  > imageDetail.json
    - sed -i 's/<APP_NAME>/'$IMAGE_REPO_NAME'/g' appspec.yml taskdef.json
    - sed -i 's/<SERVICE_PORT>/'$SERVICE_PORT'/g' appspec.yml taskdef.json
    - sed -i 's/<AWS_ACCOUNT_ID>/'$AWS_ACCOUNT_ID'/g' taskdef.json
    - sed -i 's/<MEMORY_RESV>/'$MEMORY_RESV'/g' taskdef.json
    - sed -i 's/<IMAGE_NAME>/'$AWS_ACCOUNT_ID'\.dkr\.ecr\.'$AWS_DEFAULT_REGION'\.amazonaws.com\/'$IMAGE_REPO_NAME'\:'$IMAGE_TAG'/g' taskdef.json
    - apt-get install jq -y
    - ImageURI=$(cat imageDetail.json | jq -r '.ImageURI')
    # - sed -i -e "s|CONTAINER_NAME|$ContainerName|g" imagedefinitions.json
    # - sed -i -e "s|IMAGE_URI|$ImageURI|g" imagedefinitions.json
    # - echo Writing image definitions file...
    # - printf '[{"name":"%s" , $ECR_REPOSITORY_URI:"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json

artifacts:
  files: 
    - imageDetail.json
    - appspec.yml
    - taskdef.json
    # - imagedefinitions.json
